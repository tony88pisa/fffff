# Guardian Trading System - .gitignore
# File e directory da escludere dal version control

# =============================================================================
# SICUREZZA - FILE SENSIBILI (MAI COMMITTARE!)
# =============================================================================

# File di configurazione con API keys e secrets
.env
.env.local
.env.production
.env.staging
.env.development
*.env

# Chiavi SSL e certificati
config/ssl/
*.pem
*.key
*.crt
*.p12
*.pfx

# File di configurazione con credenziali
config/secrets/
config/credentials/
secrets.json
credentials.json
api_keys.json

# Backup di database con dati sensibili
*.sql
*.dump
*.backup

# =============================================================================
# PYTHON
# =============================================================================

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# =============================================================================
# DATI E DATABASE
# =============================================================================

# Database files
*.db
*.sqlite
*.sqlite3
data/*.db
data/*.sqlite
data/*.sqlite3

# Database backups
data/backups/
backups/
*.bak

# Dati di mercato scaricati
data/market_data/
data/historical/
data/real_time/
data/cache/

# File temporanei di dati
data/temp/
data/tmp/
temp/
tmp/

# File di log
logs/
*.log
*.log.*
log/

# File di cache
cache/
.cache/
*.cache

# =============================================================================
# MODELLI E AI
# =============================================================================

# Modelli ML salvati
models/
*.pkl
*.pickle
*.joblib
*.h5
*.hdf5
*.pt
*.pth
*.onnx
*.tflite
*.pb

# Checkpoints di training
checkpoints/
*.ckpt
*.checkpoint

# TensorBoard logs
tensorboard_logs/
runs/

# Weights & Biases
wandb/

# MLflow
mlruns/

# =============================================================================
# DOCKER E CONTAINERS
# =============================================================================

# Docker volumes
volumes/
docker-volumes/

# Docker override files
docker-compose.override.yml
docker-compose.local.yml
docker-compose.dev.yml

# =============================================================================
# RISULTATI E REPORT
# =============================================================================

# Risultati di backtesting
results/
backtest_results/
*.csv
*.xlsx
*.json

# Report generati
reports/
*.pdf
*.html

# Grafici e immagini generate
plots/
charts/
*.png
*.jpg
*.jpeg
*.gif
*.svg

# =============================================================================
# CONFIGURAZIONI LOCALI
# =============================================================================

# Configurazioni specifiche dell'utente
config/local/
config/user/
local_config.json
user_config.json

# File di configurazione IDE
.vscode/
.idea/
*.swp
*.swo
*~

# Configurazioni OS specifiche
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# =============================================================================
# TRADING E BROKER
# =============================================================================

# File di trading live
trading_sessions/
live_trades/
positions.json
orders.json

# File di configurazione broker
broker_config/
api_credentials/

# File di stato del sistema
state/
system_state.json
last_run.json

# =============================================================================
# MONITORING E METRICS
# =============================================================================

# Prometheus data
prometheus_data/

# Grafana data
grafana_data/

# Metrics files
metrics/
*.metrics

# =============================================================================
# TESTING
# =============================================================================

# Test data
test_data/
tests/data/

# Test results
test_results/
.pytest_cache/

# Coverage reports
htmlcov/
.coverage
coverage.xml

# =============================================================================
# DOCUMENTAZIONE
# =============================================================================

# Documentazione generata
docs/_build/
docs/build/
site/

# =============================================================================
# VARIE
# =============================================================================

# File temporanei
*.tmp
*.temp
*.bak
*.old

# File di lock
*.lock
*.pid

# File compressi
*.zip
*.tar.gz
*.rar
*.7z

# File di sistema
.env.example
.env.sample

# Node.js (se presente frontend)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# =============================================================================
# FINE .gitignore
# =============================================================================

# NOTA IMPORTANTE:
# Questo .gitignore Ã¨ configurato per proteggere informazioni sensibili
# come API keys, credenziali, e dati di trading.
# 
# RICORDA:
# - Mai committare file .env o con credenziali
# - Usa sempre .env.template per esempi
# - Mantieni separati i dati di produzione da quelli di sviluppo
# - Fai backup regolari dei dati importanti (fuori dal repo)